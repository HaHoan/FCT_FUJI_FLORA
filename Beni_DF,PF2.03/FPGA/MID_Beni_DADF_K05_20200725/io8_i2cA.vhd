-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2010 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 9.1 (Build Build 304 01/25/2010)
-- Created on Sat Jul 19 10:48:21 2014

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
use IEEE.std_logic_arith.all;


--  Entity Declaration

ENTITY IO8_I2CA IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	GENERIC
	(
		INITD	: STD_LOGIC_VECTOR( 7 DOWNTO 0 ) := "00000000"
	);
	PORT
	(
		DATAI : IN STD_LOGIC_VECTOR(7 downto 0);
		nCS : IN STD_LOGIC;
		nWR : IN STD_LOGIC;
		nRD : IN STD_LOGIC;
		OUTP : OUT STD_LOGIC_VECTOR(7 downto 0);
		DATAO : OUT STD_LOGIC_VECTOR(7 downto 0);
		RESET : IN STD_LOGIC
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END IO8_I2CA;


--  Architecture Body

ARCHITECTURE IO8_I2CA_architecture OF IO8_I2CA IS

	signal OUTBUF		: std_logic_vector ( 7 downto 0 );
	signal DATAO_TMP	: std_logic_vector ( 7 downto 0 );
	signal D_Hiz		: std_logic := '1';
	
BEGIN

	OUTP <= OUTBUF;
	
	DATAO	<= ( others => 'Z' ) when D_Hiz = '1' else OUTBUF;

	process (
		nCS,
		nWR,
		nRD
	)
	begin
		
		if ( RESET = '0' ) then
			D_HiZ			<= '1';
			OUTBUF		<= INITD;
		elsif ( nCS = '1' ) then
			D_Hiz		<= '1';
		elsif ( nRD = '0' and nWR = '1' ) then
			D_Hiz			<= '0';
--			DATAO_TMP	<= OUTBUF; 
		elsif ( nRD = '1' and nWR = '0' ) then
			OUTBUF		<= DATAI;
			D_Hiz			<= '1';
		else
			D_Hiz			<= '1';
		end if;
	
--		if ( nCS = '0' ) then
--			if ( nWR'event and nWR = '1' ) then
--					OUTBUF <= DATAI;
--			end if;
--		end if;

--		if ( nCS = '1' ) then
--			DATAO <= (others=>'Z');
--		elsif ( nRD'event and nRD = '0' ) then
--			DATAO <= OUTBUF;
--		end if;
	end process;


END IO8_I2CA_architecture;
