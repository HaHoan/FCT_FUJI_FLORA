-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Intel Program License
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel MegaCore Function License Agreement, or other
-- applicable license agreement, including, without limitation,
-- that your use is for the sole purpose of programming logic
-- devices manufactured by Intel and sold by Intel or its
-- authorized distributors.  Please refer to the applicable
-- agreement for further details.


-- Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
-- Created on Fri Jun 01 21:04:28 2018

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
use IEEE.std_logic_arith.all;

--  Entity Declaration

ENTITY WIDTHCOUNT IS
-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
PORT
(
	RESET				: IN	STD_LOGIC;
	START				: IN	STD_LOGIC;
	WIDTHGATE		: IN	STD_LOGIC;
	WIDTHCLK			: IN	STD_LOGIC;
	FILTFREQ			: IN	STD_LOGIC;
	WIDTHCNT			: OUT	STD_LOGIC_VECTOR(15 downto 0);
	WIDTHHICNT		: OUT	STD_LOGIC_VECTOR(15 downto 0);
	
	TP					: OUT STD_LOGIC
);
-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!

END WIDTHCOUNT;


--  Architecture Body

ARCHITECTURE WIDTHCOUNT_architecture OF WIDTHCOUNT IS

	signal	Count		: std_logic_vector ( 15 downto 0 );
	signal	HiCount	: std_logic_vector ( 15 downto 0 );

BEGIN
	
	TP <= '0';
	
	WIDTHCNT		<= Count;
	WIDTHHICNT	<= HiCount;

	process (
		RESET,
		START,
		WIDTHGATE,
		WIDTHCLK,
		FILTFREQ
	)
	begin
		if ( ( RESET = '0' ) or ( START = '0' ) ) then
			Count		<= ( others => '0' );
			HiCount	<= ( others => '0' );

		elsif ( WIDTHCLK'event and WIDTHCLK = '1' ) then
			
			if ( WIDTHGATE = '1' ) then
				COUNT	<= COUNT + '1';
				if ( FILTFREQ = '1' ) then
					HiCount <= HiCount + '1';
				else
					NULL;
				end if;
			else
				NULL;
			end if;
		else
			NULL;
		end if;
	end process;
	
	
	
	
	
	
END WIDTHCOUNT_architecture;
