-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Intel Program License
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel MegaCore Function License Agreement, or other
-- applicable license agreement, including, without limitation,
-- that your use is for the sole purpose of programming logic
-- devices manufactured by Intel and sold by Intel or its
-- authorized distributors.  Please refer to the applicable
-- agreement for further details.


-- Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
-- Created on Fri Jun 01 17:08:19 2018

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
use IEEE.std_logic_arith.all;

--  Entity Declaration

ENTITY CLK_GEN IS
-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
GENERIC
(
	DIV		: INTEGER := 10
);
PORT
(
	RESET		: IN	STD_LOGIC;
	CLKI		: IN	STD_LOGIC;
	CLKO		: OUT	STD_LOGIC
);
-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!

END CLK_GEN;


--  Architecture Body

ARCHITECTURE CLK_GEN_architecture OF CLK_GEN IS

	signal	CLKCNT		: std_logic_vector( 7 downto 0 );

BEGIN

	process (
		RESET,
		CLKI
	)
	begin
		if ( RESET = '0' ) then
			CLKO		<= '0';
			CLKCNT	<= ( others => '0' );
		
		elsif ( CLKI'event and CLKI = '1' ) then
			if ( CLKCNT > ( DIV / 2 - 1) ) then
				
				if ( CLKCNT >= ( DIV - 1 ) ) then
					CLKCNT	<= ( others => '0' );
				else
					CLKCNT	<= CLKCNT + '1';
				end if;
				
				CLKO		<= '0';
			else
				CLKCNT	<= CLKCNT + '1';
				CLKO		<= '1';
			end if;
		else
			NULL;
		
		end if;
	end process;




END CLK_GEN_architecture;
